{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","console","log","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetails","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","NotFound","NewQuote","React","lazy","App","fallback","QuoteDetail","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.18eb9822.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === 'SEND') {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: 'pending',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESS') {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR') {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: 'SEND' });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: 'SUCCESS', responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: 'ERROR',\r\n          errorMessage: error.message || 'Something went wrong!',\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = 'https://http-router-f903c-default-rtdb.firebaseio.com/';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestData.commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1pZJB\",\"logo\":\"MainNavigation_logo__2JN3P\",\"nav\":\"MainNavigation_nav__2lwQ2\",\"active\":\"MainNavigation_active__3TEdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3j0iY\",\"loading\":\"NewCommentForm_loading__3T5kM\",\"control\":\"NewCommentForm_control__3UuaK\",\"actions\":\"NewCommentForm_actions__26_Zf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__4P4bs\",\"sorting\":\"QuoteList_sorting__3thVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2a2QT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__30CRP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__yfSSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3JPPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3KmHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3FYpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__18IAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__kN4bM\"};","import {Link} from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if(ascending){\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else{\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const history = useHistory();\n  const location= useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n\n  console.log(location);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortAscending ? 'desc' : 'asc')}`\n    });\n    history.push(`${location.pathname}?sort=${(isSortAscending ? 'desc' : 'asc')}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import {Link} from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import {useEffect} from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getAllQuotes} from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\nconst AllQuotes = () => {\r\n    const{sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if(status === 'pending'){\r\n        return <div className='centered'>\r\n            <LoadingSpinner></LoadingSpinner>\r\n        </div>\r\n    }\r\n\r\n    if(error){\r\n        return <p className='centered focused'>{error}</p>;\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        return <NoQuotesFound/>\r\n    }\r\n\r\n    return(\r\n        <QuoteList quotes={loadedQuotes}/>\r\n    )\r\n};\r\n\r\nexport default AllQuotes;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;","import {useParams, Route, Link, useRouteMatch} from 'react-router-dom';\r\nimport {useEffect} from 'react';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getSingleQuote} from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const {quoteId} = params;\r\n\r\n    const{sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n    \r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if(status === 'pending'){\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner></LoadingSpinner>\r\n            </div>);\r\n    }\r\n\r\n    if(error){\r\n        return <p className='centered'>{error}</p>;\r\n    }\r\n\r\n    if(!loadedQuote.text){\r\n        return <p>No quote found!</p>;\r\n    }\r\n    return(<>\r\n    <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}></HighlightedQuote>\r\n    <Route path={match.path} exact>\r\n    <div className='centered'>\r\n        <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments!\r\n        </Link>\r\n    </div>\r\n    </Route>\r\n    <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n    </Route>\r\n    </>\r\n    )\r\n\r\n};\r\n\r\nexport default QuoteDetails;","import {NavLink} from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n\r\n    return <header className={classes.header}>\r\n        <div className={classes.logo}> Great Quotes </div>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='/quotes' activeClassName={classes.active}>\r\n                        All Quotes\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/new-quote' activeClassName={classes.active}>\r\n                        Add a Quote\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n};\r\n\r\nexport default MainNavigation;","import {Fragment} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n    return <Fragment>\r\n        <MainNavigation></MainNavigation>\r\n        <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n};\r\n\r\nexport default Layout;","const NotFound = () => {\r\n    return (<div className=\"centered\">\r\n        <p>Page not found!</p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {Suspense} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDetails from './pages/QuoteDetail';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={<div className=\"centered\"><LoadingSpinner></LoadingSpinner></div>}>\n    <Switch>\n      <Route path='/' exact>\n        <Redirect to='/quotes'></Redirect>\n      </Route>\n      <Route path='/quotes' exact>\n        <AllQuotes></AllQuotes>\n      </Route>\n\n      <Route path='/quotes/:quoteId'>\n        <QuoteDetails></QuoteDetails>\n      </Route>\n\n      <Route path='/new-quote'>\n        <NewQuote></NewQuote>\n      </Route>\n\n      <Route path='*'>\n        <NotFound></NotFound>\n      </Route>\n    </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n"],"sourceRoot":""}